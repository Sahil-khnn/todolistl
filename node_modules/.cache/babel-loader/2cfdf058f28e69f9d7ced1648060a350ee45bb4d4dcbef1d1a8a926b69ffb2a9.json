{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL KHAN\\\\newone\\\\reactfour\\\\src\\\\context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useReducer, useEffect } from \"react\";\n// import reducer from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet API = \"https://hn.algolia.com/api/v1/search?\";\nconst initialState = {\n  isLoading: true,\n  query: \"HTML\",\n  nbPages: 0,\n  page: 0,\n  hits: []\n};\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchApiData = async url => {\n    // dispatch({ tpe: \"SET_LOADING\" });\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchApiData(API);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: \"Thapa Technical\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider, useGlobalContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useReducer","useEffect","API","initialState","isLoading","query","nbPages","page","hits","AppContext","createContext","AppProvider","children","state","dispatch","reducer","fetchApiData","url","res","fetch","data","json","console","log","error","useGlobalContext"],"sources":["C:/Users/SAHIL KHAN/newone/reactfour/src/context.jsx"],"sourcesContent":["import React, { useContext, useReducer, useEffect } from \"react\";\r\n// import reducer from \"./reducer\";\r\n\r\nlet API = \"https://hn.algolia.com/api/v1/search?\";\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  query: \"HTML\",\r\n  nbPages: 0,\r\n  page: 0,\r\n  hits: [],\r\n};\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchApiData = async (url) => {\r\n    // dispatch({ tpe: \"SET_LOADING\" });\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApiData(API);\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider value=\"Thapa Technical\">\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { AppContext, AppProvider, useGlobalContext };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAChE;AAAA;AAEA,IAAIC,GAAG,GAAG,uCAAuC;AAEjD,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,UAAU,gBAAGX,KAAK,CAACY,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACe,OAAO,EAAEZ,YAAY,CAAC;EAE3D,MAAMa,YAAY,GAAG,MAAOC,GAAG,IAAK;IAClC;;IAEA,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC5B,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACde,YAAY,CAACd,GAAG,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAC,iBAAiB;IAAA,UACzCU;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GAxBID,WAAW;AAAA,KAAXA,WAAW;AA0BjB,MAAMc,gBAAgB,GAAG,MAAM;EAAA;EAC7B,OAAO1B,UAAU,CAACU,UAAU,CAAC;AAC/B,CAAC;AAAC,IAFIgB,gBAAgB;AAGtB,SAAShB,UAAU,EAAEE,WAAW,EAAEc,gBAAgB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}